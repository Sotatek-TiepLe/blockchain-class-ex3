{"version":3,"sources":["utils/connect.js","features/connectWallet/index.jsx","functions/contract.js","utils/const.js","functions/format.js","features/popupAction/index.jsx","features/Stake/index.jsx","hooks/listener.js","App.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","walletConnect","WalletConnectConnector","rpc","qrcode","SC_MasterChef","CHAIN_LIST","ConnectWallet","activate","useWeb3React","useState","modal","setModal","toggle","connector","target","Button","color","size","onClick","Modal","isOpen","centered","ModalHeader","ModalBody","Row","className","Col","block","getContractWETH","library","Contract","ABI_WETH","getSigner","getContractMasterChef","ABI_MasterChef","getContractDD2","ABI_DD2","KEY","formatAmount","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatAmountDD2","PopupAction","title","currency","balance","show","onToggle","onSubmit","closeBtn","value","setValue","useEffect","close","InputGroup","Input","type","max","placeholder","onChange","e","InputGroupAddon","addonType","format","ModalFooter","disabled","length","Message","setting","key","msg","Alert","PopupStake","props","PopupWithdraw","Stake","chainId","account","deactivate","isApprove","setIsApprove","setMsg","clearBigNumber","BigNumber","from","balanceWETH","setBalanceWETH","pendingDD2","setPeddingDD2","balanceDD2","setBalanceDD2","totalDD2","setTotalDD2","harvesting","setHarvesting","approving","setApproving","staking","setStaking","withdrawing","setWithdrawing","showStake","setShowStake","showWithdraw","setShowWithdraw","triedEager","active","tried","setTried","isAuthorized","then","undefined","catch","useEagerConnect","suppress","error","ethereum","window","on","handleConnect","console","log","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","showMessage","content","setTimeout","showMessageSuccess","showMessageError","getBalanceWETH","a","myContract","balanceOf","getPendingDD2","pendding","getBalanceDD2","getTotalDD2","totalSupply","onClickHarvest","withdraw","res","wait","err","stack","stateUpdate","Promise","all","onClickApprove","approve","toString","toggleStake","toggleWithdraw","onSubmitStake","deposit","parseUnits","onSubmitWithdraw","Container","Card","CardHeader","CardBody","sm","slice","Badge","href","formatEther","xs","Spinner","ListGroup","horizontal","ListGroupItem","action","eq","Math","round","Number","getLibrary","provider","Web3Provider","pollingInterval","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8eb868ee.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\n\n// Connect wallet\nexport const injected = new InjectedConnector({ supportedChainIds: [4] });\nexport const walletConnect = new WalletConnectConnector({\n\trpc: {\n\t\t// 1: \"https://mainnet.infura.io/v3/c9f9eba874a24d339db4c886f6964321\",\n\t\t4: \"https://rinkeby.infura.io/v3/c9f9eba874a24d339db4c886f6964321\"\n\t},\n\tqrcode: true\n});\n\n// Address\nexport const SC_WETH = \"0xc778417E063141139Fce010982780140Aa0cD5Ab\";\nexport const SC_MasterChef = \"0x9da687e88b0A807e57f1913bCD31D56c49C872c2\";\nexport const SC_DD2 = \"0xb1745657CB84c370DD0Db200a626d06b28cc5872\";\n\n// Chain\nexport const CHAIN_LIST = {\n\t1: \"Ethereum\",\n\t2: \"Morden (disused), Expanse mainnet\",\n\t3: \"Ropsten\",\n\t4: \"Rinkeby\",\n\t5: \"Goerli\"\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useWeb3React } from \"@web3-react/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Modal, ModalHeader, ModalBody, Row } from \"reactstrap\";\nimport { injected, walletConnect } from \"utils/connect\";\n\nexport default function ConnectWallet() {\n\tconst web3React = useWeb3React();\n\tconst { activate } = web3React;\n\tconst [modal, setModal] = useState(false);\n\tconst toggle = (connector) => {\n\t\tconnector && !connector?.target && activate(connector);\n\t\tsetModal(!modal);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button color=\"primary\" size=\"sm\" onClick={toggle}>\n\t\t\t\tConnect wallet\n\t\t\t</Button>\n\n\t\t\t<Modal isOpen={modal} toggle={toggle} centered>\n\t\t\t\t<ModalHeader toggle={toggle}>Connect with ...</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<Row className=\"justify-content-center g-4\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\tcolor=\"warning\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\ttoggle(injected);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tMetaMask\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\ttoggle(walletConnect);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tWalletConnect\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</ModalBody>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n","import { Contract } from '@ethersproject/contracts';\nimport { SC_DD2, SC_MasterChef, SC_WETH } from 'utils/connect';\nimport ABI_DD2 from 'ABI/DD2';\nimport ABI_MasterChef from 'ABI/MasterChef';\nimport ABI_WETH from 'ABI/WETH';\n\nexport const getContractWETH = (library) => {\n  return new Contract(\n    SC_WETH,\n    ABI_WETH,\n    library.getSigner()\n  );\n}\n\nexport const getContractMasterChef = (library) => {\n  return new Contract(\n    SC_MasterChef,\n    ABI_MasterChef,\n    library.getSigner()\n  );\n}\n\nexport const getContractDD2 = (library) => {\n  return new Contract(\n    SC_DD2,\n    ABI_DD2,\n    library.getSigner()\n  );\n}","export const KEY = {\n  ERROR: \"ERROR\",\n  SUCCESS: \"SUCCESS\"\n}","export const formatAmount = new Intl.NumberFormat('en-US', {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 4,\n});\n\nexport const formatAmountDD2 = new Intl.NumberFormat('en-US', {\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0,\n});","import { formatAmount } from \"functions/format\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n\tButton,\n\tCol,\n\tInput,\n\tInputGroup,\n\tInputGroupAddon,\n\tModal,\n\tModalBody,\n\tModalFooter,\n\tModalHeader,\n\tRow,\n} from \"reactstrap\";\n\nexport default function PopupAction({\n\ttitle,\n\tcurrency,\n\tbalance,\n\tshow,\n\tonToggle,\n\tonSubmit,\n}) {\n\tconst closeBtn = (\n\t\t<button className=\"close\" onClick={onToggle}>\n\t\t\t&times;\n\t\t</button>\n\t);\n\tconst [value, setValue] = useState(\"\");\n\tconst onClickMax = (e) => {\n\t\tsetValue(balance);\n\t};\n\n\tuseEffect(() => {\n\t\t// Reset value when close popup\n\t\tsetValue(\"\");\n\t}, [show]);\n\n\treturn (\n\t\t<Modal isOpen={show} toggle={onToggle} centered>\n\t\t\t<ModalHeader toggle={onToggle} close={closeBtn}>\n\t\t\t\t{title}\n\t\t\t</ModalHeader>\n\t\t\t<ModalBody>\n\t\t\t\t<Row className=\"justify-content-center\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmax={balance}\n\t\t\t\t\t\t\t\tplaceholder=\"Input balance\"\n\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetValue(e.target.value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<InputGroupAddon addonType=\"append\">\n\t\t\t\t\t\t\t\t<Button onClick={onClickMax}>Max</Button>\n\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\tYou balance: <b>{formatAmount.format(balance)}</b> {currency}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</ModalBody>\n\t\t\t<ModalFooter>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={value.length === 0}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonSubmit(value);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{title}\n\t\t\t\t</Button>{\" \"}\n\t\t\t\t<Button color=\"secondary\" onClick={onToggle}>\n\t\t\t\t\tCancel\n\t\t\t\t</Button>\n\t\t\t</ModalFooter>\n\t\t</Modal>\n\t);\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n\tAlert,\n\tBadge,\n\tButton,\n\tCard,\n\tCardBody,\n\tCardHeader,\n\tCol,\n\tContainer,\n\tListGroup,\n\tListGroupItem,\n\tRow,\n\tSpinner,\n} from \"reactstrap\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport ConnectWallet from \"features/connectWallet\";\nimport { useEagerConnect, useInactiveListener } from \"hooks/listener\";\nimport {\n\tgetContractDD2,\n\tgetContractMasterChef,\n\tgetContractWETH,\n} from \"functions/contract\";\nimport { CHAIN_LIST, SC_MasterChef } from \"utils/connect\";\nimport { KEY } from \"utils/const\";\nimport PopupAction from \"features/popupAction\";\nimport { formatAmount, formatAmountDD2 } from \"functions/format\";\nimport { formatEther, parseEther, parseUnits } from \"@ethersproject/units\";\n\nfunction Message({ setting }) {\n\tconst { show, key, msg } = setting;\n\treturn (\n\t\tshow && (\n\t\t\t<Alert color={key === KEY.SUCCESS ? \"success\" : \"danger\"}>{msg}</Alert>\n\t\t)\n\t);\n}\n\nfunction PopupStake(props) {\n\treturn <PopupAction title=\"Stake\" {...props} currency=\"WETH\" />;\n}\n\nfunction PopupWithdraw(props) {\n\treturn <PopupAction title=\"Withdraw\" {...props} currency=\"DD2\" />;\n}\n\nfunction Stake(props) {\n\tconst { chainId, library, account, deactivate, connector } = useWeb3React();\n\tconst [isApprove, setIsApprove] = useState(false);\n\tconst [msg, setMsg] = useState({\n\t\tshow: false,\n\t\ttype: null,\n\t\tmsg: \"\",\n\t});\n\tconst clearBigNumber = BigNumber.from(0);\n\tconst [balanceWETH, setBalanceWETH] = useState(clearBigNumber);\n\tconst [pendingDD2, setPeddingDD2] = useState(clearBigNumber);\n\tconst [balanceDD2, setBalanceDD2] = useState(clearBigNumber);\n\tconst [totalDD2, setTotalDD2] = useState(clearBigNumber);\n\t// Loading\n\tconst [harvesting, setHarvesting] = useState(false);\n\tconst [approving, setApproving] = useState(false);\n\tconst [staking, setStaking] = useState(false);\n\tconst [withdrawing, setWithdrawing] = useState(false);\n\t// Popup\n\tconst [showStake, setShowStake] = useState(false);\n\tconst [showWithdraw, setShowWithdraw] = useState(false);\n\n\t// handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n\tconst triedEager = useEagerConnect();\n\n\t// handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n\tuseInactiveListener(!triedEager);\n\n\t// App\n\tconst showMessage = (key, content) => {\n\t\tsetMsg({\n\t\t\t...msg,\n\t\t\tshow: true,\n\t\t\tkey,\n\t\t\tmsg: content,\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tsetMsg({\n\t\t\t\t...msg,\n\t\t\t\tshow: false,\n\t\t\t});\n\t\t}, 4000);\n\t};\n\tconst showMessageSuccess = (content) => {\n\t\tshowMessage(KEY.SUCCESS, content);\n\t};\n\tconst showMessageError = (content) => {\n\t\tshowMessage(KEY.ERROR, content);\n\t};\n\n\t//\n\tconst getBalanceWETH = async () => {\n\t\tconst myContract = getContractWETH(library);\n\t\tconst balance = await myContract.balanceOf(account);\n\t\treturn balance;\n\t};\n\tconst getPendingDD2 = async () => {\n\t\tconst myContract = getContractMasterChef(library);\n\t\tconst pendding = await myContract.pendingDD2(account);\n\t\treturn pendding;\n\t};\n\tconst getBalanceDD2 = async () => {\n\t\tconst myContract = getContractDD2(library);\n\t\tconst balance = await myContract.balanceOf(account);\n\t\treturn balance;\n\t};\n\tconst getTotalDD2 = async () => {\n\t\tconst myContract = getContractDD2(library);\n\t\tconst balance = await myContract.totalSupply();\n\t\treturn balance;\n\t};\n\tconst onClickHarvest = async () => {\n\t\tsetHarvesting(true);\n\t\tconst myContract = getContractMasterChef(library);\n\t\tawait myContract\n\t\t\t.withdraw(0)\n\t\t\t.then(async (res) => {\n\t\t\t\tawait res.wait();\n\t\t\t\tsetHarvesting(false);\n\t\t\t\tshowMessageSuccess(\"Harvest success !\");\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tshowMessageError(err.stack);\n\t\t\t\tsetHarvesting(false);\n\t\t\t});\n\t};\n\tconst renderAccount = () => {\n\t\treturn account ? account.slice(0, 6) + \"...\" + account.slice(-4) : \"\";\n\t};\n\n\t// Init\n\tconst stateUpdate = harvesting && approving && staking && withdrawing;\n\t// Updating\n\tuseEffect(() => {\n\t\t(async function () {\n\t\t\t//\n\t\t\tif (\n\t\t\t\t// Init app\n\t\t\t\t(library && !stateUpdate) ||\n\t\t\t\t// Or updated\n\t\t\t\tstateUpdate\n\t\t\t) {\n\t\t\t\tPromise.all([\n\t\t\t\t\tgetPendingDD2(),\n\t\t\t\t\tgetBalanceDD2(),\n\t\t\t\t\tgetTotalDD2(),\n\t\t\t\t\tgetBalanceWETH(),\n\t\t\t\t]).then((res) => {\n\t\t\t\t\tsetPeddingDD2(res[0]);\n\t\t\t\t\tsetBalanceDD2(res[1]);\n\t\t\t\t\tsetTotalDD2(res[2]);\n\t\t\t\t\tsetBalanceWETH(res[3]);\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!account) {\n\t\t\t\tsetPeddingDD2(clearBigNumber);\n\t\t\t\tsetBalanceDD2(clearBigNumber);\n\t\t\t\tsetTotalDD2(clearBigNumber);\n\t\t\t\tsetBalanceWETH(clearBigNumber);\n\t\t\t}\n\t\t})();\n\t}, [account, library, chainId, harvesting, approving, staking, withdrawing]);\n\n\t// ACTION\n\tconst onClickApprove = async (e) => {\n\t\t// UI\n\t\tsetApproving(true);\n\t\t// Call\n\t\tconst myContract = getContractWETH(library);\n\t\t// Sent\n\t\tmyContract\n\t\t\t.approve(SC_MasterChef, balanceWETH.toString())\n\t\t\t.then(async (res) => {\n\t\t\t\tawait res.wait();\n\t\t\t\tshowMessageSuccess(\"Approve success !\");\n\t\t\t\tsetIsApprove(true);\n\t\t\t\tsetApproving(false);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tshowMessageError(err.stack);\n\t\t\t\tsetApproving(false);\n\t\t\t});\n\t};\n\tconst toggleStake = () => {\n\t\tsetShowStake(!showStake);\n\t};\n\tconst toggleWithdraw = () => {\n\t\tsetShowWithdraw(!showWithdraw);\n\t};\n\tconst onSubmitStake = async (value) => {\n\t\tif (value <= balanceWETH.toString()) {\n\t\t\t// UI\n\t\t\tsetStaking(true);\n\t\t\tsetShowStake(false);\n\t\t\t// Call\n\t\t\tconst myContract = getContractMasterChef(library);\n\n\t\t\tmyContract\n\t\t\t\t.deposit(parseUnits(value, 18))\n\t\t\t\t.then(async (res) => {\n\t\t\t\t\tawait res.wait();\n\t\t\t\t\tshowMessageSuccess(\"Stake success !\");\n\t\t\t\t\tsetStaking(false);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tshowMessageError(err.stack);\n\t\t\t\t\tsetStaking(false);\n\t\t\t\t});\n\t\t}\n\t};\n\tconst onSubmitWithdraw = async (value) => {\n\t\tif (value <= balanceDD2.toString()) {\n\t\t\t// UI\n\t\t\tsetWithdrawing(true);\n\t\t\tsetShowWithdraw(false);\n\t\t\t// Call\n\t\t\tconst myContract = getContractMasterChef(library);\n\n\t\t\tmyContract\n\t\t\t\t.withdraw(parseUnits(value, 18))\n\t\t\t\t.then(async (res) => {\n\t\t\t\t\tawait res.wait();\n\t\t\t\t\tshowMessageSuccess(\"Withdraw WETH success !\");\n\t\t\t\t\tsetWithdrawing(false);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tshowMessageError(err.stack);\n\t\t\t\t\tsetWithdrawing(false);\n\t\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Message setting={msg} />\n\t\t\t<Card>\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<Row className=\"justify-content-between align-items-center\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<b>Stake token</b>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col className=\"text-right\">{!account && <ConnectWallet />}</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col sm={12}>\n\t\t\t\t\t\t\tWallet address: <b>{renderAccount()}</b>\n\t\t\t\t\t\t\t{account && (\n\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\t\tcolor=\"danger\"\n\t\t\t\t\t\t\t\t\tclassName=\"ml-2\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tdeactivate();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col className=\"mt-2\">\n\t\t\t\t\t\t\tNetwork: <b>{CHAIN_LIST[chainId]}</b>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"mt-2\">\n\t\t\t\t\t\t<Col sm={12}>\n\t\t\t\t\t\t\tBalance:{\" \"}\n\t\t\t\t\t\t\t<b>{formatAmount.format(formatEther(balanceWETH))} WETH</b>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"justify-content-between align-items-center\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\tToken earned:{\" \"}\n\t\t\t\t\t\t\t<b>{formatAmount.format(formatEther(pendingDD2))} DD2</b>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col className=\"text-sm-right\" sm=\"4\" xs={12}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor=\"success\"\n\t\t\t\t\t\t\t\tonClick={onClickHarvest}\n\t\t\t\t\t\t\t\tdisabled={harvesting || !account}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tHarvest {harvesting && <Spinner size=\"sm\" color=\"light\" />}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"mt-3\">\n\t\t\t\t\t\t{!isApprove ? (\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t\t\t\tonClick={onClickApprove}\n\t\t\t\t\t\t\t\t\tdisabled={approving || !account}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tApprove {approving && <Spinner size=\"sm\" color=\"light\" />}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tonClick={toggleStake}\n\t\t\t\t\t\t\t\t\t\tdisabled={staking}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tStake {staking && <Spinner size=\"sm\" color=\"light\" />}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\n\t\t\t\t\t\t\t\t\t\tonClick={toggleWithdraw}\n\t\t\t\t\t\t\t\t\t\tdisabled={withdrawing}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tWithdraw{\" \"}\n\t\t\t\t\t\t\t\t\t\t{withdrawing && <Spinner size=\"sm\" color=\"light\" />}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Row>\n\t\t\t\t\t{/*  */}\n\t\t\t\t\t<ListGroup className=\"mt-3\" horizontal>\n\t\t\t\t\t\t<ListGroupItem action>Share of pool</ListGroupItem>\n\t\t\t\t\t\t<ListGroupItem action>\n\t\t\t\t\t\t\t{!totalDD2.eq(0)\n\t\t\t\t\t\t\t\t? Math.round(\n\t\t\t\t\t\t\t\t\t\t(Number(balanceDD2.toString()) /\n\t\t\t\t\t\t\t\t\t\t\tNumber(totalDD2.toString())) *\n\t\t\t\t\t\t\t\t\t\t\t100\n\t\t\t\t\t\t\t\t  ) + \" %\"\n\t\t\t\t\t\t\t\t: \"0 %\"}\n\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t</ListGroup>\n\t\t\t\t\t<ListGroup className=\"mt-3\" horizontal>\n\t\t\t\t\t\t<ListGroupItem action>Your stake</ListGroupItem>\n\t\t\t\t\t\t<ListGroupItem action>\n\t\t\t\t\t\t\t{`${formatAmountDD2.format(formatEther(balanceDD2))} Token`}\n\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t</ListGroup>\n\t\t\t\t\t<ListGroup className=\"mt-3\" horizontal>\n\t\t\t\t\t\t<ListGroupItem action>Total stake</ListGroupItem>\n\t\t\t\t\t\t<ListGroupItem action>\n\t\t\t\t\t\t\t{`${formatAmountDD2.format(formatEther(totalDD2))} Token`}\n\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t</ListGroup>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\n\t\t\t{/* Popup */}\n\t\t\t<PopupStake\n\t\t\t\tshow={showStake}\n\t\t\t\tbalance={formatEther(balanceWETH)}\n\t\t\t\tonToggle={toggleStake}\n\t\t\t\tonSubmit={onSubmitStake}\n\t\t\t/>\n\t\t\t<PopupWithdraw\n\t\t\t\tshow={showWithdraw}\n\t\t\t\tbalance={formatEther(pendingDD2)}\n\t\t\t\tonToggle={toggleWithdraw}\n\t\t\t\tonSubmit={onSubmitWithdraw}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nStake.propTypes = {};\n\nexport default Stake;\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { injected } from 'utils/connect'\n\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","import './App.css';\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport Stake from 'features/Stake';\n\nfunction getLibrary(provider, connector) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library; // this will vary according to whether you use e.g. ethers or web3.js\n}\n\nfunction App() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      {/* <ConnectWallet /> */}\n      <Stake />\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}